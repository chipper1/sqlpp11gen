// WARNING; don't change this file manually. This file is generated by sqlpp11gen!
#ifndef SQLPP_TAB_<%= @tablename.upcase %>_H
#define SQLPP_TAB_<%= @tablename.upcase %>_H

#include <sqlpp11/table.h>
#include <sqlpp11/char_sequence.h>
#include <sqlpp11/column_types.h>

//
// table: <%= @tablename %>
// fields: <%= @cols.length%>
<% @cols.each do |col| %>
// <%= "  %-30s %-10s %-10s %s" % [col.name, col.type, col.null, col.sql_type.downcase] %>
<% end %>
//

namespace Tab<%= @tablename%>_ {
<% @cols.each do |col| %>
  struct <%= col.name.camelcase %> {
    struct _alias_t {
      static constexpr const char _literal[] = "<%= col.name%>";
      using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
      template <typename T>
      struct _member_t {
        T <%= col.name %>;
        T& operator()() { return <%= col.name %>; }
        const T& operator()() const { return <%= col.name %>; }
      };
    };
<% 
#sqltype = col.sql_type.downcase
#sqltype = 'time_point' if sqltype == 'datetime'
#sqltype = 'floating_point' if sqltype == 'decimal'
sqltype = sqlpptype(col.sql_type.downcase)
%>
    using _traits = sqlpp::make_traits<sqlpp::<%= sqltype %><% if col.null %>, sqlpp::tag::can_be_null<%end%>>;
  };
<% end %>
} // namespace Tab<%= @tablename %>_

struct Tab<%= @tablename %> : sqlpp::table_t<Tab<%= @tablename%>
<% @cols.each do |col|%>
       , Tab<%= @tablename %>_::<%= col.name.camelcase %> 
<% end%>     >
{
  using _value_type = sqlpp::no_value_t;
  struct _alias_t {
    static constexpr const char _literal[] = "<%= @tableklass.table_name %>";
    using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
    template <typename T>
    struct _member_t {
      T tab<%= @tablename %>;
      T& operator()() { return tab<%= @tablename %>; }
      const T& operator()() const { return tab<%= @tablename %>; }
    };
  };
};

struct <%= @tablename%>Data {
  <%= @tablename%>Data() : <%= buildCtor(@cols) %> {}
<% @cols.each do |col| %>
<%   ctype = coltype2ctype(col.type.to_s) %>
<%= "  %-32s %-25s; // %-10s %s" % [ctype, col.name, col.null, col.sql_type.downcase] %>
<% end %>
};

#endif // SQLPP_TAB_<%= @tablename.upcase %>_H
